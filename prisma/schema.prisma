generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  name      String
  role      Role     @default(RECRUITER)
  createdAt DateTime @default(now())
  jobs      JobPosting[]
}

model JobPosting {
  id          String       @id @default(uuid())
  title       String
  description String
  location    String
  createdAt   DateTime     @default(now())
  userId      String
  user        User         @relation(fields: [userId], references: [id])
  applications Application[]
}

model Candidate {
  id          String       @id @default(uuid())
  name        String
  email       String       @unique
  phone       String?
  resumeUrl   String       // cloud/local resume link
  createdAt   DateTime     @default(now())
  applications Application[]
  resumeParse ResumeParse?
}

model Application {
  id          String     @id @default(uuid())
  candidateId String
  jobId       String
  status      AppStatus  @default(APPLIED)
  createdAt   DateTime   @default(now())

  candidate   Candidate  @relation(fields: [candidateId], references: [id])
  job         JobPosting @relation(fields: [jobId], references: [id])
}

model ResumeParse {
  id          String     @id @default(uuid())
  candidateId String     @unique
  skills      String[]
  education   String?
  experience  String?
  rawText     String?

  candidate   Candidate  @relation(fields: [candidateId], references: [id])
}

enum Role {
  ADMIN
  RECRUITER
}

enum AppStatus {
  APPLIED
  SHORTLISTED
  REJECTED
  HIRED
}
